#!mesosphere/dispatch-starlark:v0.5-beta2
# vi:syntax=python
load("github.com/mesosphere/dispatch-catalog/starlark/stable/pipeline@0.0.4", "gitResource", "pullRequest", "push", "secretVar", "clean", "imageResource", "volume")
load("github.com/mesosphere/dispatch-catalog/starlark/stable/docker@0.0.5", "dind_task")
load("github.com/mesosphere/cluster-claim-controller/starlark/claim", "make_kind_cluster", "fetch_kubeconfig", "cleanup")

git = "src-git"

gitResource(git, url = "$(context.git.url)", revision = "$(context.git.commit)")

cluster_name = "test-cluster"
kind_cluster=make_kind_cluster(cluster_name, git)

dind_task("dispatch-integration-test",
         inputs = [git],
         deps=[kind_cluster],

         steps = [
             v1.Container(
                 name="fetch-master",
                 workingDir = "/workspace/{}/".format(git),
                 args=["git", "fetch", "origin", "master"]),
             fetch_kubeconfig(cluster_name, git),
             v1.Container(
                 name = "dispatch-integration-test",
                 args = ["make","dispatch-test"],
                 workingDir = "/workspace/src-git",
                 env = [k8s.corev1.EnvVar(name = "DISPATCH_CI", value = "true"),
		        k8s.corev1.EnvVar(name = "AWS_REGION", value= "us-west-2"),
                        k8s.corev1.EnvVar(name = "AWS_ACCESS_KEY_ID",
                                          valueFrom = secretVar("d2iq-dispatch-aws-creds",
                                                                "AWS_ACCESS_KEY_ID")),
                        k8s.corev1.EnvVar(name = "AWS_SECRET_ACCESS_KEY",
                                          valueFrom = secretVar("d2iq-dispatch-aws-creds",
                                                                "AWS_SECRET_ACCESS_KEY")),
                        k8s.corev1.EnvVar(name = "SSH_KEY_BASE64",
                                          valueFrom = secretVar("d2iq-dispatch-git-ssh-base64",
                                                                "ssh-privatekey-base64"))
			])
		])

clean_kind=cleanup(kind_cluster, "dispatch-integration-test", git)

action(tasks = ["dispatch-integration-test", clean_kind], on = pullRequest())
action(tasks = ["dispatch-integration-test", clean_kind], on = pullRequest(chatops = ["test"]))
